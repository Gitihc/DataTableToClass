<?xml version="1.0"?>
<doc>
<assembly>
<name>
DataTableToClass
</name>
</assembly>
<members>
<member name="P:DataTableToClass.VBFlowHandlerTemplateBase.GenerationEnvironment">
	<summary>
The string builder that generation-time code is using to assemble generated output
</summary>
</member><member name="P:DataTableToClass.VBFlowHandlerTemplateBase.Errors">
	<summary>
The error collection for the generation process
</summary>
</member><member name="P:DataTableToClass.VBFlowHandlerTemplateBase.indentLengths">
	<summary>
A list of the lengths of each indent that was added with PushIndent
</summary>
</member><member name="P:DataTableToClass.VBFlowHandlerTemplateBase.CurrentIndent">
	<summary>
Gets the current indent we use when adding lines to the output
</summary>
</member><member name="P:DataTableToClass.VBFlowHandlerTemplateBase.Session">
	<summary>
Current transformation session
</summary>
</member><member name="M:DataTableToClass.VBFlowHandlerTemplateBase.Write(System.String)">
	<summary>
Write text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBFlowHandlerTemplateBase.WriteLine(System.String)">
	<summary>
Write text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBFlowHandlerTemplateBase.Write(System.String,System.Object[])">
	<summary>
Write formatted text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBFlowHandlerTemplateBase.WriteLine(System.String,System.Object[])">
	<summary>
Write formatted text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBFlowHandlerTemplateBase.Error(System.String)">
	<summary>
Raise an error
</summary>
</member><member name="M:DataTableToClass.VBFlowHandlerTemplateBase.Warning(System.String)">
	<summary>
Raise a warning
</summary>
</member><member name="M:DataTableToClass.VBFlowHandlerTemplateBase.PushIndent(System.String)">
	<summary>
Increase the indent
</summary>
</member><member name="M:DataTableToClass.VBFlowHandlerTemplateBase.PopIndent">
	<summary>
Remove the last indent that was added with PushIndent
</summary>
</member><member name="M:DataTableToClass.VBFlowHandlerTemplateBase.ClearIndent">
	<summary>
Remove any indentation
</summary>
</member><member name="P:DataTableToClass.VBFlowHandlerTemplateBase.ToStringInstanceHelper.FormatProvider">
	<summary>
Gets or sets format provider to be used by ToStringWithCulture method.
</summary>
</member><member name="M:DataTableToClass.VBFlowHandlerTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
	<summary>
This is called from the compile/run appdomain to convert objects within an expression block to a string
</summary>
</member><member name="T:DataTableToClass.VBFlowHandlerTemplateBase.ToStringInstanceHelper">
	<summary>
Utility class to produce culture-oriented representation of an object as a string.
</summary>
</member><member name="T:DataTableToClass.VBFlowHandlerTemplateBase">
	<summary>
Base class for this transformation
</summary>
</member><member name="P:DataTableToClass.VBServiceTemplateBase.GenerationEnvironment">
	<summary>
The string builder that generation-time code is using to assemble generated output
</summary>
</member><member name="P:DataTableToClass.VBServiceTemplateBase.Errors">
	<summary>
The error collection for the generation process
</summary>
</member><member name="P:DataTableToClass.VBServiceTemplateBase.indentLengths">
	<summary>
A list of the lengths of each indent that was added with PushIndent
</summary>
</member><member name="P:DataTableToClass.VBServiceTemplateBase.CurrentIndent">
	<summary>
Gets the current indent we use when adding lines to the output
</summary>
</member><member name="P:DataTableToClass.VBServiceTemplateBase.Session">
	<summary>
Current transformation session
</summary>
</member><member name="M:DataTableToClass.VBServiceTemplateBase.Write(System.String)">
	<summary>
Write text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBServiceTemplateBase.WriteLine(System.String)">
	<summary>
Write text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBServiceTemplateBase.Write(System.String,System.Object[])">
	<summary>
Write formatted text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBServiceTemplateBase.WriteLine(System.String,System.Object[])">
	<summary>
Write formatted text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBServiceTemplateBase.Error(System.String)">
	<summary>
Raise an error
</summary>
</member><member name="M:DataTableToClass.VBServiceTemplateBase.Warning(System.String)">
	<summary>
Raise a warning
</summary>
</member><member name="M:DataTableToClass.VBServiceTemplateBase.PushIndent(System.String)">
	<summary>
Increase the indent
</summary>
</member><member name="M:DataTableToClass.VBServiceTemplateBase.PopIndent">
	<summary>
Remove the last indent that was added with PushIndent
</summary>
</member><member name="M:DataTableToClass.VBServiceTemplateBase.ClearIndent">
	<summary>
Remove any indentation
</summary>
</member><member name="P:DataTableToClass.VBServiceTemplateBase.ToStringInstanceHelper.FormatProvider">
	<summary>
Gets or sets format provider to be used by ToStringWithCulture method.
</summary>
</member><member name="M:DataTableToClass.VBServiceTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
	<summary>
This is called from the compile/run appdomain to convert objects within an expression block to a string
</summary>
</member><member name="T:DataTableToClass.VBServiceTemplateBase.ToStringInstanceHelper">
	<summary>
Utility class to produce culture-oriented representation of an object as a string.
</summary>
</member><member name="T:DataTableToClass.VBServiceTemplateBase">
	<summary>
Base class for this transformation
</summary>
</member><member name="P:DataTableToClass.VBModelTemplateBase.GenerationEnvironment">
	<summary>
The string builder that generation-time code is using to assemble generated output
</summary>
</member><member name="P:DataTableToClass.VBModelTemplateBase.Errors">
	<summary>
The error collection for the generation process
</summary>
</member><member name="P:DataTableToClass.VBModelTemplateBase.indentLengths">
	<summary>
A list of the lengths of each indent that was added with PushIndent
</summary>
</member><member name="P:DataTableToClass.VBModelTemplateBase.CurrentIndent">
	<summary>
Gets the current indent we use when adding lines to the output
</summary>
</member><member name="P:DataTableToClass.VBModelTemplateBase.Session">
	<summary>
Current transformation session
</summary>
</member><member name="M:DataTableToClass.VBModelTemplateBase.Write(System.String)">
	<summary>
Write text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBModelTemplateBase.WriteLine(System.String)">
	<summary>
Write text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBModelTemplateBase.Write(System.String,System.Object[])">
	<summary>
Write formatted text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBModelTemplateBase.WriteLine(System.String,System.Object[])">
	<summary>
Write formatted text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBModelTemplateBase.Error(System.String)">
	<summary>
Raise an error
</summary>
</member><member name="M:DataTableToClass.VBModelTemplateBase.Warning(System.String)">
	<summary>
Raise a warning
</summary>
</member><member name="M:DataTableToClass.VBModelTemplateBase.PushIndent(System.String)">
	<summary>
Increase the indent
</summary>
</member><member name="M:DataTableToClass.VBModelTemplateBase.PopIndent">
	<summary>
Remove the last indent that was added with PushIndent
</summary>
</member><member name="M:DataTableToClass.VBModelTemplateBase.ClearIndent">
	<summary>
Remove any indentation
</summary>
</member><member name="P:DataTableToClass.VBModelTemplateBase.ToStringInstanceHelper.FormatProvider">
	<summary>
Gets or sets format provider to be used by ToStringWithCulture method.
</summary>
</member><member name="M:DataTableToClass.VBModelTemplateBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
	<summary>
This is called from the compile/run appdomain to convert objects within an expression block to a string
</summary>
</member><member name="T:DataTableToClass.VBModelTemplateBase.ToStringInstanceHelper">
	<summary>
Utility class to produce culture-oriented representation of an object as a string.
</summary>
</member><member name="T:DataTableToClass.VBModelTemplateBase">
	<summary>
Base class for this transformation
</summary>
</member><member name="P:DataTableToClass.My.Resources.Resources.ResourceManager">
	<summary>
  返回此类使用的缓存的 ResourceManager 实例。
</summary>
</member><member name="P:DataTableToClass.My.Resources.Resources.Culture">
	<summary>
  使用此强类型资源类，为所有资源查找
  重写当前线程的 CurrentUICulture 属性。
</summary>
</member><member name="T:DataTableToClass.My.Resources.Resources">
	<summary>
  一个强类型的资源类，用于查找本地化的字符串等。
</summary>
</member><member name="P:DataTableToClass.DbColumn.ColumnID">
	<summary>
 字段ID
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:DataTableToClass.DbColumn.IsPrimaryKey">
	<summary>
 是否主键
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:DataTableToClass.DbColumn.ColumnName">
	<summary>
 字段名称
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:DataTableToClass.DbColumn.ColumnType">
	<summary>
 字段类型
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:DataTableToClass.DbColumn.CSharpType">
	<summary>
 数据库类型对应的C#类型
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:DataTableToClass.DbColumn.CommonType">
	<summary>
	</summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:DataTableToClass.DbColumn.ByteLength">
	<summary>
 字节长度
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:DataTableToClass.DbColumn.CharLength">
	<summary>
 字符长度
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:DataTableToClass.DbColumn.Scale">
	<summary>
 小数位
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:DataTableToClass.DbColumn.IsIdentity">
	<summary>
 是否自增列
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:DataTableToClass.DbColumn.IsNullable">
	<summary>
 是否允许空
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:DataTableToClass.DbColumn.DefaultValue">
	<summary>
 默认值
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:DataTableToClass.DbColumn.Remark">
	<summary>
 描述
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:DataTableToClass.DbColumn">
	<summary>
 表字段结构
 </summary>
	<remarks></remarks>
</member><member name="P:DataTableToClass.EasyUI_JSTableColumnsBase.GenerationEnvironment">
	<summary>
The string builder that generation-time code is using to assemble generated output
</summary>
</member><member name="P:DataTableToClass.EasyUI_JSTableColumnsBase.Errors">
	<summary>
The error collection for the generation process
</summary>
</member><member name="P:DataTableToClass.EasyUI_JSTableColumnsBase.indentLengths">
	<summary>
A list of the lengths of each indent that was added with PushIndent
</summary>
</member><member name="P:DataTableToClass.EasyUI_JSTableColumnsBase.CurrentIndent">
	<summary>
Gets the current indent we use when adding lines to the output
</summary>
</member><member name="P:DataTableToClass.EasyUI_JSTableColumnsBase.Session">
	<summary>
Current transformation session
</summary>
</member><member name="M:DataTableToClass.EasyUI_JSTableColumnsBase.Write(System.String)">
	<summary>
Write text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.EasyUI_JSTableColumnsBase.WriteLine(System.String)">
	<summary>
Write text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.EasyUI_JSTableColumnsBase.Write(System.String,System.Object[])">
	<summary>
Write formatted text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.EasyUI_JSTableColumnsBase.WriteLine(System.String,System.Object[])">
	<summary>
Write formatted text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.EasyUI_JSTableColumnsBase.Error(System.String)">
	<summary>
Raise an error
</summary>
</member><member name="M:DataTableToClass.EasyUI_JSTableColumnsBase.Warning(System.String)">
	<summary>
Raise a warning
</summary>
</member><member name="M:DataTableToClass.EasyUI_JSTableColumnsBase.PushIndent(System.String)">
	<summary>
Increase the indent
</summary>
</member><member name="M:DataTableToClass.EasyUI_JSTableColumnsBase.PopIndent">
	<summary>
Remove the last indent that was added with PushIndent
</summary>
</member><member name="M:DataTableToClass.EasyUI_JSTableColumnsBase.ClearIndent">
	<summary>
Remove any indentation
</summary>
</member><member name="P:DataTableToClass.EasyUI_JSTableColumnsBase.ToStringInstanceHelper.FormatProvider">
	<summary>
Gets or sets format provider to be used by ToStringWithCulture method.
</summary>
</member><member name="M:DataTableToClass.EasyUI_JSTableColumnsBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
	<summary>
This is called from the compile/run appdomain to convert objects within an expression block to a string
</summary>
</member><member name="T:DataTableToClass.EasyUI_JSTableColumnsBase.ToStringInstanceHelper">
	<summary>
Utility class to produce culture-oriented representation of an object as a string.
</summary>
</member><member name="T:DataTableToClass.EasyUI_JSTableColumnsBase">
	<summary>
Base class for this transformation
</summary>
</member><member name="M:DataTableToClass.DBUtil.ExecuteHasQuery(System.String)">
	<summary>
 执行数据数据查询，并返回数据集
 </summary>
	<remarks>传入要执行的SQL语句</remarks>
</member><member name="M:DataTableToClass.DBUtil.ExecuteNonQuery(System.String)">
	<summary>
 执行数据库更新动作，并返回受影响的行数
 </summary>
	<remarks>传入要执行的SQL语句</remarks>
</member><member name="M:DataTableToClass.DBUtil.ExecuteScalar(System.String)">
	<summary>
 执行数据库查询动作，并返回第一行第一列的值
 </summary>
	<remarks>传入要查询的SQL语句</remarks>
</member><member name="P:DataTableToClass.DbTable.TableName">
	<summary>
 表名称
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:DataTableToClass.DbTable.SchemaName">
	<summary>
 表的架构
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:DataTableToClass.DbTable.Rows">
	<summary>
 表的记录数
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:DataTableToClass.DbTable.HasPrimaryKey">
	<summary>
 是否含有主键
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:DataTableToClass.DbTable">
	<summary>
 表结构
 </summary>
	<remarks></remarks>
</member><member name="P:DataTableToClass.VBRepositoryTemplate.ToStringInstanceHelper.FormatProvider">
	<summary>
Gets or sets format provider to be used by ToStringWithCulture method.
</summary>
</member><member name="M:DataTableToClass.VBRepositoryTemplate.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
	<summary>
This is called from the compile/run appdomain to convert objects within an expression block to a string
</summary>
</member><member name="T:DataTableToClass.VBRepositoryTemplate.ToStringInstanceHelper">
	<summary>
Utility class to produce culture-oriented representation of an object as a string.
</summary>
</member><member name="P:DataTableToClass.VBRepositoryTemplateBase.GenerationEnvironment">
	<summary>
The string builder that generation-time code is using to assemble generated output
</summary>
</member><member name="P:DataTableToClass.VBRepositoryTemplateBase.Errors">
	<summary>
The error collection for the generation process
</summary>
</member><member name="P:DataTableToClass.VBRepositoryTemplateBase.indentLengths">
	<summary>
A list of the lengths of each indent that was added with PushIndent
</summary>
</member><member name="P:DataTableToClass.VBRepositoryTemplateBase.CurrentIndent">
	<summary>
Gets the current indent we use when adding lines to the output
</summary>
</member><member name="P:DataTableToClass.VBRepositoryTemplateBase.Session">
	<summary>
Current transformation session
</summary>
</member><member name="M:DataTableToClass.VBRepositoryTemplateBase.Write(System.String)">
	<summary>
Write text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBRepositoryTemplateBase.WriteLine(System.String)">
	<summary>
Write text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBRepositoryTemplateBase.Write(System.String,System.Object[])">
	<summary>
Write formatted text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBRepositoryTemplateBase.WriteLine(System.String,System.Object[])">
	<summary>
Write formatted text directly into the generated output
</summary>
</member><member name="M:DataTableToClass.VBRepositoryTemplateBase.Error(System.String)">
	<summary>
Raise an error
</summary>
</member><member name="M:DataTableToClass.VBRepositoryTemplateBase.Warning(System.String)">
	<summary>
Raise a warning
</summary>
</member><member name="M:DataTableToClass.VBRepositoryTemplateBase.PushIndent(System.String)">
	<summary>
Increase the indent
</summary>
</member><member name="M:DataTableToClass.VBRepositoryTemplateBase.PopIndent">
	<summary>
Remove the last indent that was added with PushIndent
</summary>
</member><member name="M:DataTableToClass.VBRepositoryTemplateBase.ClearIndent">
	<summary>
Remove any indentation
</summary>
</member><member name="T:DataTableToClass.VBRepositoryTemplateBase">
	<summary>
Base class for this transformation
</summary>
</member>
</members>
</doc>