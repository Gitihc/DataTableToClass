<#@ template debug="false" hostspecific="false" language="VB" #>
<#@ output extension=".txt" #>

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.ComponentModel;

<# if(addNamespace)#>namespace <#=namespaceKey#>
{
<#End If#>
	/// <summary>
	/// 
	/// </summary>
	public class <#= tableName#>
	{
	<# For Each column in listColumns #>
		/// <summary>
		/// <#=column.Remark#>
		/// </summary>
		[Description("<#=column.Remark#>")]
		public <#= column.CSharpType#><# if(column.CommonType.IsValueType andalso column.IsNullable)#>?<#End If#> <#=column.ColumnName#> { get; set; }
	<# Next #>
	}

	public class <#= mapName#> : IEntityTypeConfiguration<<#= tableName#>>
    {
        public void Configure(EntityTypeBuilder<<#= tableName#>> builder)
        {
			builder.ToTable("<#= tableName#>");
<#For Each column in listColumns 
	If column.IsPrimaryKey then#>
			builder.HasKey(t => t.<#=column.ColumnName#>);
	<#Else#>
	<#
		Dim suffixStr = ""

		If column.ColumnType.ToString() =  "varchar" then
			If column.CharLength =-1 then
				suffixStr +=".HasColumnType("""+ column.ColumnType +"(MAX)"")"
			Else 
				suffixStr +=".HasColumnType("""+ column.ColumnType +""")"
			End If 
		End If
		
		If column.CommonType = GetType(Decimal) OrElse column.CommonType = GetType(Double) Then
			suffixStr += ".HasPrecision(18, " + column.Scale.toString() + ")"
		End If

		If column.DefaultValue = "getdate()" OrElse column.DefaultValue = "Now" Then
			suffixStr += ".HasDefaultValueSql("""+ column.DefaultValue +""")"
		ElseIf Not String.IsNullOrWhiteSpace(column.DefaultValue) Then
			suffixStr +=".HasDefaultValue("+ column.DefaultValue +")"
		End If

		If column.ColumnType.ToString() =  "timestamp" Then
			suffixStr += ".IsRowVersion()"
		End If

		If column.ColumnType.ToString() =  "varchar" AndAlso column.CharLength >0 Then
			suffixStr += ".HasMaxLength("& column.CharLength &")"
		End If

		If Not String.IsNullOrWhiteSpace(column.Remark) Then
			suffixStr += ".HasComment("""+column.Remark +""")"
		End If
	#>
		builder.Property(t => t.<#=column.ColumnName#>)<#=suffixStr#>;
	<#End If 
Next#>
        }
    }
<# if(addNamespace)#>}<#End If#>