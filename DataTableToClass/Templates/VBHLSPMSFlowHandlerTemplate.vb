Imports System

'------------------------------------------------------------------------------
'<auto-generated>
'    此代码由工具生成。
'    运行时版本: 10.0.0.0
' 
'    对此文件的更改可能会导致不正确的行为。此外，如果
'    重新生成代码，这些更改将会丢失。
'</auto-generated>
'------------------------------------------------------------------------------
<System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")>  _
Partial Public Class VBHLSPMSFlowHandlerTemplate
    Inherits VBHLSPMSFlowHandlerTemplateBase
    Public Overridable Function TransformText() As String
        Me.Write("Public Class ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",2)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(flowHandlerName))
        
        #End ExternalSource
        Me.Write(""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Implements IFlowHandler"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#Region ""FlowStep相关"""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Public Function SetFirstF"& _ 
                "lowStep(dType As ApprovalTypeEnum, projectId As Integer, listId As Integer, user"& _ 
                "Id As String) As Boolean Implements IFlowHandler.SetFirstFlowStep"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Retur"& _ 
                "n FlowHandlerCommon.SetFirstFlowStep(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",7)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(dType, projectId, listId, userId, Me)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function "& _ 
                "GetOriginator(lid As Integer) As String Implements IFlowHandler.GetOriginator"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "       Return FlowHandlerCommon.GetOriginator(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",11)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function GetFlowInfo(lid As Integer) As St"& _ 
                "ring Implements IFlowHandler.GetFlowInfo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Dim listModel = EntityHelper.G"& _ 
                "etSelect(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",15)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(Function(x) x.LID = lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        For Each model In listModel"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            With"& _ 
                " model"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                If String.IsNullOrEmpty(.ApproverIds) Then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "        .ApproverIds = """""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                End If"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            End With"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                " Next"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Dim result = AutoMapperHelper.MapToList(Of FlowView)(listModel)"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        For Each itm In result"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            itm.StateName = FlowHandlerCommon."& _ 
                "GetFlowStateName(itm.State)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            itm.ApproveName = itm.ApproverNames"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "      Next"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Dim rztStr = ObjectToJSON(result)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        rztStr = RegexD"& _ 
                "ate(rztStr)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return rztStr"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    '"& _ 
                "'' 通过id获取审批步骤"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""Id""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <r"& _ 
                "eturns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function GetFlowStepB"& _ 
                "yID(Id As Integer) As ApprovalBase Implements IFlowHandler.GetFlowStepByID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "    Return EntityHelper.GetFristDefault(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",42)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(Function(x) x.ID = Id)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 获取审批第一步"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "   ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""lid""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <returns></return"& _ 
                "s>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function GetFirstFlowStep(lid As Int"& _ 
                "eger) As ApprovalBase Implements IFlowHandler.GetFirstFlowStep"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return F"& _ 
                "lowHandlerCommon.GetFirstFlowStep(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",51)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 获取审批最后一步"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""lid""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <returns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remar"& _ 
                "ks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function GetLastFlowStep(lid As Integer) As ApprovalBa"& _ 
                "se Implements IFlowHandler.GetLastFlowStep"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return FlowHandlerCommon.Get"& _ 
                "LastFlowStep(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",61)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 是否需要设置下一步审批人"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </su"& _ 
                "mmary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""applyType""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""projectId"& _ 
                """></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""lid""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""curUserId"">"& _ 
                "</param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""approvalResult""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""cu"& _ 
                "rStepId""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <returns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                " Public Function IsNeedSetFlowUser(applyType As ApprovalTypeEnum, projectId As I"& _ 
                "nteger, lid As Integer, curUserId As Integer, approvalResult As Integer, curStep"& _ 
                "Id As Integer) As Boolean Implements IFlowHandler.IsNeedSetFlowUser"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Dim"& _ 
                " lidInfo = GetLidInfo(lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&" Dim curFlowStep As Object = Nothing"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        If c"& _ 
                "urStepId > 0 Then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            curFlowStep = GetFlowStepByID(curStepId)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                " Else"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            curFlowStep = FlowHandlerCommon.GetCurrentFlowStep(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",81)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        End If"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return FlowHandlerCommon.IsNeedSetFlowUser(applyT"& _ 
                "ype, projectId, lidInfo.BranchId, lid, lidInfo.lidCode, lidInfo.lidName, curUser"& _ 
                "Id, approvalResult, curFlowStep, Me)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    '"& _ 
                "'' 获取当前审批步骤"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""lid""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <re"& _ 
                "turns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function GetCurrentFlo"& _ 
                "wStep(lid As Integer) As ApprovalBase Implements IFlowHandler.GetCurrentFlowStep"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return FlowHandlerCommon.GetCurrentFlowStep(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",92)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 获取审批集合"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "    ''' <param name=""lid""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <returns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remark"& _ 
                "s></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function GetFlowlist(lid As Integer) As System.Collecti"& _ 
                "ons.Generic.List(Of ApprovalBase) Implements IFlowHandler.GetFlowlist"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        R"& _ 
                "eturn FlowHandlerCommon.GetFlowlist(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",101)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(lid).ToList"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 获取下一步审批"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </su"& _ 
                "mmary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""lid""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""stepId""></param"& _ 
                ">"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <returns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function"& _ 
                " GetNextStepByID(lid As Integer, stepId As Integer) As ApprovalBase Implements I"& _ 
                "FlowHandler.GetNextStepByID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&"Return FlowHandlerCommon.GetNextFlowStep(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",111)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(lid, stepId)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 更新方法"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summ"& _ 
                "ary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""model""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <returns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    '''"& _ 
                " <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function Update(model As ApprovalBase) As Boole"& _ 
                "an Implements IFlowHandler.Update"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return EntityHelper.Update(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",120)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(model)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#End Region"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#Region ""flowRecord"""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Sub U"& _ 
                "pdateFlowRecord(applType As ApprovalTypeEnum, lid As Integer) Implements IFlowHa"& _ 
                "ndler.UpdateFlowRecord"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Call ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",126)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(serviceName))
        
        #End ExternalSource
        Me.Write(".UpdateFlowRecord(applType, lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Sub"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#End Region"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#Region ""审批处理相关"""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "   ''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 设置步骤审批人"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""proj"& _ 
                "ectId""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""stepId""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""use"& _ 
                "rIds""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <returns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Pu"& _ 
                "blic Function SetFlowStepUser(projectId As Integer, stepId As Integer, userIds A"& _ 
                "s String) As Boolean Implements IFlowHandler.SetFlowStepUser"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return Flo"& _ 
                "wHandlerCommon.SetFlowStepUser(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",140)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(projectId, stepId, userIds)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 是否为"& _ 
                "最后一步"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""lid""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param nam"& _ 
                "e=""stepId""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <returns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "   Public Function IsLastStepFlowStep(lid As Integer, stepId As Integer) As Bool"& _ 
                "ean Implements IFlowHandler.IsLastStepFlowStep"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return FlowHandlerCommon"& _ 
                ".IsLastStepFlowStep(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",151)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(lid, stepId)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 判断是否存在审批流程"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <"& _ 
                "/summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""lid""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <returns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function IsExistFlow(lid As Integer) As Bool"& _ 
                "ean Implements IFlowHandler.IsExistFlow"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return FlowHandlerCommon.IsExis"& _ 
                "tFlow(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",161)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 提交审批"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "    ''' <param name=""applyType""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""curUserId""></para"& _ 
                "m>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""projectId""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""lid""></param>"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""stepId""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""opinion""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""approvalResult""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <returns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                " ''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function SubmitFlow(applyType As ApprovalTy"& _ 
                "peEnum, curUserId As Integer, projectId As Integer, lid As Integer, stepId As In"& _ 
                "teger, opinion As String, approvalResult As Integer) As Boolean Implements IFlow"& _ 
                "Handler.SubmitFlow"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Dim curFlowStep = GetCurrentFlowStep(lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                " Dim result = FlowHandlerCommon.SubmitFlow(applyType, curUserId, projectId, lid,"& _ 
                " stepId, opinion, approvalResult,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "     AddressOf ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",180)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(serviceName))
        
        #End ExternalSource
        Me.Write(".FinishFunc,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                  AddressOf ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",181)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(serviceName))
        
        #End ExternalSource
        Me.Write(".RejectFunc,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                  curFlowStep, Me)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Try '操作成功，记录日志"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            Dim eventNote As String = String.Format(""将审"& _ 
                "批【{0}】设置为【{1}】。"", curFlowStep.StepName, IIf(approvalResult = 1, ""通过"", IIf(approv"& _ 
                "alResult = 2, ""免审"", ""不通过"")))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            SysEventsLog(LogType.Log_Approval, Eve"& _ 
                "ntType.Exa_Start, curUserId, projectId, lid, GetTaskNameByTaskID(lid), eventNote"& _ 
                ")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Catch ex As Exception"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            ErrorHandle(""SetExamItem-记录审批不通过"","& _ 
                " ex)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        End Try"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return result"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <summary"& _ 
                ">"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 审批完成后执行的方法"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""aplType""></param"& _ 
                ">"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""projectId""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""curApprovalSte"& _ 
                "pModel""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Sub DoFuncAfterFinishF"& _ 
                "low(aplType As Integer, projectId As Integer, curUserId As Integer, curApprovalS"& _ 
                "tepModel As ApprovalBase) Implements IFlowHandler.DoFuncAfterFinishFlow"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                " Call ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",199)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(serviceName))
        
        #End ExternalSource
        Me.Write(".FinishFunc(aplType, projectId, curApprovalStepModel, curUserId)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Sub"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "  ''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 全部重审"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""lid""></p"& _ 
                "aram>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Sub ReDoAllFlowStep(lid As Intege"& _ 
                "r) Implements IFlowHandler.ReDoAllFlowStep"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Call FlowHandlerCommon.ReDoA"& _ 
                "llFlowStep(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",207)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Sub"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 保存审批意见"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    '"& _ 
                "'' <param name=""userName""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""lid""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' "& _ 
                "<param name=""stepId""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""opinion""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <"& _ 
                "returns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function SaveFlowSte"& _ 
                "pAdvice(userName As String, lid As Integer, stepId As Integer, opinion As String"& _ 
                ") As Boolean Implements IFlowHandler.SaveFlowStepAdvice"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return FlowHand"& _ 
                "lerCommon.SaveFlowStepAdvice(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",219)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(userName, lid, stepId, opinion, Me)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#End Region"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#Region """& _ 
                "单据相关"""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function GetLidInfo(lid As Integer) As LidInfo Implements IFlo"& _ 
                "wHandler.GetLidInfo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Dim model = ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",225)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(lidServiceName))
        
        #End ExternalSource
        Me.Write(".Get(Function(x) x.ID = lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Dim projObj = ProjectListServices.Get(model"& _ 
                ".ProjectID)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Dim info = New LidInfo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        With info"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            If N"& _ 
                "ot IsNothing(projObj) Then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                .BranchId = projObj.BranchID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "          .ProjectName = projObj.ProjectName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            End If"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&".ID = model"& _ 
                ".ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            .lidAplState = model.ExAction"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            .lidState = model.St"& _ 
                "atus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            .lidName = model.Name"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&".lidCode = model.Code"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        End W"& _ 
                "ith"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return info"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&"Public Function GetLidInfo1(lidCode"& _ 
                " As String) As LidInfo Implements IFlowHandler.GetLidInfo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&" Dim model = ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",242)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(lidServiceName))
        
        #End ExternalSource
        Me.Write(".Get(Function(x) x.ID = lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Dim projObj = ProjectListServices.Get(model"& _ 
                ".ProjectID)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Dim info = New LidInfo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        With info"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            If N"& _ 
                "ot IsNothing(projObj) Then"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                .BranchId = projObj.BranchID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "          .ProjectName = projObj.ProjectName"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            End If"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&".ID = model"& _ 
                ".ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            .lidAplState = model.ExAction"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            .lidState = model.St"& _ 
                "atus"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            .lidName = model.Name"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&Global.Microsoft.VisualBasic.ChrW(9)&".lidCode = model.Code"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        End W"& _ 
                "ith"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return info"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#End Region"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#Region ""传阅相关"""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    '"& _ 
                "'' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 设置传阅人"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""projectId"""& _ 
                "></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""stepId""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""Circulate"& _ 
                "dUserIds""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <returns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "  Public Function SetCirculatedUser(projectId As Integer, stepId As Integer, Cir"& _ 
                "culatedUserIds As String) As Boolean Implements IFlowHandler.SetCirculatedUser"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "        Return FlowHandlerCommon.SetCirculatedUser(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",270)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(projectId, stepId, CirculatedUserIds)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "   ''' 检查是否存在审批流程"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""applyType""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""projectId""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""lid""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "   ''' <param name=""curUserId""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""approvalResult""></"& _ 
                "param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""curFlowStep""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <returns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function IsNeedSetCirculatedUser(applyT"& _ 
                "ype As ApprovalTypeEnum, projectId As Integer, branchId As String, lid As Intege"& _ 
                "r, curUserId As Integer, approvalResult As Integer, curFlowStep As ApprovalBase)"& _ 
                " As Boolean Implements IFlowHandler.IsNeedSetCirculatedUser"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return Flow"& _ 
                "HandlerCommon.IsNeedSetCirculatedUser(applyType, projectId, branchId, lid, curUs"& _ 
                "erId, approvalResult, curFlowStep, Me)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "   ''' 更新已阅人"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""userId""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    '''"& _ 
                " <param name=""lid""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Sub UpdateI"& _ 
                "sView(userId As Integer, lid As Integer) Implements IFlowHandler.UpdateIsView"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "       Call FlowHandlerCommon.UpdateIsView(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",295)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(userId, lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Sub"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#End Region"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#Region ""企业微信相关"""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Sub WebC"& _ 
                "hatBuildMSG(applType As Integer, projectId As Integer, lid As Integer, stepId As"& _ 
                " Integer, stepName As String, isFinishedOrReject As FlowMsgType, ByRef title As "& _ 
                "String, ByRef description As String, Optional prefixStr As String = """") Implemen"& _ 
                "ts IFlowHandler.WebChatBuildMSG"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Call ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",301)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(lidServiceName))
        
        #End ExternalSource
        Me.Write(".WebChatBuildMSG(applType, projectId, lid, stepId, stepName, isFinishedOrReject, "& _ 
                "title, description, prefixStr)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Sub"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 审批列表展示"& _ 
                "--用于微信审批列表"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""dataType""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    '''"& _ 
                " <param name=""lid""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <returns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <remarks></rem"& _ 
                "arks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function WebChatBuildListApprovalInfo(dataType As Integer, lid"& _ 
                " As Integer) As String Implements IFlowHandler.WebChatBuildListApprovalInfo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "     Return ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",312)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(lidServiceName))
        
        #End ExternalSource
        Me.Write(".WebChatBuildListApprovalInfo(dataType, lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <summary>"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' 返回展示信息列表-用于审批页面、查看审批页面"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' </summary>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""dataT"& _ 
                "ype""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <param name=""lid""></param>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    ''' <returns></returns>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "    ''' <remarks></remarks>"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function WebChatBuildListInfo(dataType A"& _ 
                "s Integer, lid As Integer) As String Implements IFlowHandler.WebChatBuildListInf"& _ 
                "o"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",322)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(lidServiceName))
        
        #End ExternalSource
        Me.Write(".WebChatBuildListInfo(dataType, lid)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#End Region"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#Region ""流"& _ 
                "程督办"""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Function ChangeCurStep(applyType As Integer, projectId As Integ"& _ 
                "er, taskId As Integer, stepId As Integer, userId As Integer) As Boolean Implemen"& _ 
                "ts IFlowHandler.ChangeCurStep"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return FlowHandlerCommon.ChangeCurStep(Of"& _ 
                " ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",328)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(applyType, projectId, taskId, stepId, userId, Me)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Publ"& _ 
                "ic Function EndApproval(applyType As Integer, projectId As Integer, lid As Integ"& _ 
                "er, lidCode As String, curUserId As Integer) As Boolean Implements IFlowHandler."& _ 
                "EndApproval"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return FlowHandlerCommon.EndApproval(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",332)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(applyType, projectId, lid, curUserId, Me)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    Public Funct"& _ 
                "ion RemindApprover(applType As Integer, projectId As Integer, lid As Integer, li"& _ 
                "dCode As String, stepId As Integer, stepName As String) As Boolean Implements IF"& _ 
                "lowHandler.RemindApprover"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        Return FlowHandlerCommon.RemindApprover(Of ")
        
        #ExternalSource("E:\Visual Studio 2010\Projects\DataTableToClass\DataTableToClass\Templates\VBHLSPMSFlowHandlerTemplate.tt",336)
        Me.Write(Me.ToStringHelper.ToStringWithCulture(modelName))
        
        #End ExternalSource
        Me.Write(")(applType, projectId, lid, lidCode, stepId, stepName, Me)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    End Function"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"#En"& _ 
                "d Region"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"End Class"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10))
        Return Me.GenerationEnvironment.ToString
    End Function
End Class
#Region "Base class"
'''<summary>
'''Base class for this transformation
'''</summary>
<System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "10.0.0.0")>  _
Public Class VBHLSPMSFlowHandlerTemplateBase
    #Region "Fields"
    Private generationEnvironmentField As Global.System.Text.StringBuilder
    Private errorsField As Global.System.CodeDom.Compiler.CompilerErrorCollection
    Private indentLengthsField As Global.System.Collections.Generic.List(Of Integer)
    Private currentIndentField As String = ""
    Private endsWithNewline As Boolean
    Private sessionField As Global.System.Collections.Generic.IDictionary(Of String, Object)
    #End Region
    #Region "Properties"
    '''<summary>
    '''The string builder that generation-time code is using to assemble generated output
    '''</summary>
    Protected Property GenerationEnvironment() As System.Text.StringBuilder
        Get
            If (Me.generationEnvironmentField Is Nothing) Then
                Me.generationEnvironmentField = New Global.System.Text.StringBuilder()
            End If
            Return Me.generationEnvironmentField
        End Get
        Set
            Me.generationEnvironmentField = value
        End Set
    End Property
    '''<summary>
    '''The error collection for the generation process
    '''</summary>
    Public ReadOnly Property Errors() As System.CodeDom.Compiler.CompilerErrorCollection
        Get
            If (Me.errorsField Is Nothing) Then
                Me.errorsField = New Global.System.CodeDom.Compiler.CompilerErrorCollection()
            End If
            Return Me.errorsField
        End Get
    End Property
    '''<summary>
    '''A list of the lengths of each indent that was added with PushIndent
    '''</summary>
    Private ReadOnly Property indentLengths() As System.Collections.Generic.List(Of Integer)
        Get
            If (Me.indentLengthsField Is Nothing) Then
                Me.indentLengthsField = New Global.System.Collections.Generic.List(Of Integer)()
            End If
            Return Me.indentLengthsField
        End Get
    End Property
    '''<summary>
    '''Gets the current indent we use when adding lines to the output
    '''</summary>
    Public ReadOnly Property CurrentIndent() As String
        Get
            Return Me.currentIndentField
        End Get
    End Property
    '''<summary>
    '''Current transformation session
    '''</summary>
    Public Overridable Property Session() As Global.System.Collections.Generic.IDictionary(Of String, Object)
        Get
            Return Me.sessionField
        End Get
        Set
            Me.sessionField = value
        End Set
    End Property
    #End Region
    #Region "Transform-time helpers"
    '''<summary>
    '''Write text directly into the generated output
    '''</summary>
    Public Overloads Sub Write(ByVal textToAppend As String)
        If String.IsNullOrEmpty(textToAppend) Then
            Return
        End If
        'If we're starting off, or if the previous text ended with a newline,
        'we have to append the current indent first.
        If ((Me.GenerationEnvironment.Length = 0)  _
                    OrElse Me.endsWithNewline) Then
            Me.GenerationEnvironment.Append(Me.currentIndentField)
            Me.endsWithNewline = false
        End If
        'Check if the current text ends with a newline
        If textToAppend.EndsWith(Global.System.Environment.NewLine, Global.System.StringComparison.CurrentCulture) Then
            Me.endsWithNewline = true
        End If
        'This is an optimization. If the current indent is "", then we don't have to do any
        'of the more complex stuff further down.
        If (Me.currentIndentField.Length = 0) Then
            Me.GenerationEnvironment.Append(textToAppend)
            Return
        End If
        'Everywhere there is a newline in the text, add an indent after it
        textToAppend = textToAppend.Replace(Global.System.Environment.NewLine, (Global.System.Environment.NewLine + Me.currentIndentField))
        'If the text ends with a newline, then we should strip off the indent added at the very end
        'because the appropriate indent will be added when the next time Write() is called
        If Me.endsWithNewline Then
            Me.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - Me.currentIndentField.Length))
        Else
            Me.GenerationEnvironment.Append(textToAppend)
        End If
    End Sub
    '''<summary>
    '''Write text directly into the generated output
    '''</summary>
    Public Overloads Sub WriteLine(ByVal textToAppend As String)
        Me.Write(textToAppend)
        Me.GenerationEnvironment.AppendLine
        Me.endsWithNewline = true
    End Sub
    '''<summary>
    '''Write formatted text directly into the generated output
    '''</summary>
    Public Overloads Sub Write(ByVal format As String, <System.ParamArrayAttribute()> ByVal args() As Object)
        Me.Write(String.Format(Global.System.Globalization.CultureInfo.CurrentCulture, format, args))
    End Sub
    '''<summary>
    '''Write formatted text directly into the generated output
    '''</summary>
    Public Overloads Sub WriteLine(ByVal format As String, <System.ParamArrayAttribute()> ByVal args() As Object)
        Me.WriteLine(String.Format(Global.System.Globalization.CultureInfo.CurrentCulture, format, args))
    End Sub
    '''<summary>
    '''Raise an error
    '''</summary>
    Public Sub [Error](ByVal message As String)
        Dim [error] As System.CodeDom.Compiler.CompilerError = New Global.System.CodeDom.Compiler.CompilerError()
        [error].ErrorText = message
        Me.Errors.Add([error])
    End Sub
    '''<summary>
    '''Raise a warning
    '''</summary>
    Public Sub Warning(ByVal message As String)
        Dim [error] As System.CodeDom.Compiler.CompilerError = New Global.System.CodeDom.Compiler.CompilerError()
        [error].ErrorText = message
        [error].IsWarning = true
        Me.Errors.Add([error])
    End Sub
    '''<summary>
    '''Increase the indent
    '''</summary>
    Public Sub PushIndent(ByVal indent As String)
        If (indent = Nothing) Then
            Throw New Global.System.ArgumentNullException("indent")
        End If
        Me.currentIndentField = (Me.currentIndentField + indent)
        Me.indentLengths.Add(indent.Length)
    End Sub
    '''<summary>
    '''Remove the last indent that was added with PushIndent
    '''</summary>
    Public Function PopIndent() As String
        Dim returnValue As String = ""
        If (Me.indentLengths.Count > 0) Then
            Dim indentLength As Integer = Me.indentLengths((Me.indentLengths.Count - 1))
            Me.indentLengths.RemoveAt((Me.indentLengths.Count - 1))
            If (indentLength > 0) Then
                returnValue = Me.currentIndentField.Substring((Me.currentIndentField.Length - indentLength))
                Me.currentIndentField = Me.currentIndentField.Remove((Me.currentIndentField.Length - indentLength))
            End If
        End If
        Return returnValue
    End Function
    '''<summary>
    '''Remove any indentation
    '''</summary>
    Public Sub ClearIndent()
        Me.indentLengths.Clear
        Me.currentIndentField = ""
    End Sub
    #End Region
    #Region "ToString Helpers"
    '''<summary>
    '''Utility class to produce culture-oriented representation of an object as a string.
    '''</summary>
    Public Class ToStringInstanceHelper
        Private formatProviderField  As System.IFormatProvider = Global.System.Globalization.CultureInfo.InvariantCulture
        '''<summary>
        '''Gets or sets format provider to be used by ToStringWithCulture method.
        '''</summary>
        Public Property FormatProvider() As System.IFormatProvider
            Get
                Return Me.formatProviderField 
            End Get
            Set
                If (Not (value) Is Nothing) Then
                    Me.formatProviderField  = value
                End If
            End Set
        End Property
        '''<summary>
        '''This is called from the compile/run appdomain to convert objects within an expression block to a string
        '''</summary>
        Public Function ToStringWithCulture(ByVal objectToConvert As Object) As String
            If (objectToConvert Is Nothing) Then
                Throw New Global.System.ArgumentNullException("objectToConvert")
            End If
            Dim t As System.Type = objectToConvert.GetType
            Dim method As System.Reflection.MethodInfo = t.GetMethod("ToString", New System.Type() {GetType(System.IFormatProvider)})
            If (method Is Nothing) Then
                Return objectToConvert.ToString
            Else
                Return CType(method.Invoke(objectToConvert, New Object() {Me.formatProviderField }),String)
            End If
        End Function
    End Class
    Private toStringHelperField As ToStringInstanceHelper = New ToStringInstanceHelper()
    Public ReadOnly Property ToStringHelper() As ToStringInstanceHelper
        Get
            Return Me.toStringHelperField
        End Get
    End Property
    #End Region
End Class
#End Region
